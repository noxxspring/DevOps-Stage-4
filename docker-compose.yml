version: "3.8"

services:
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.letsencryptresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencryptresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencryptresolver.acme.email=admin@microservices.ddns.net"
      - "--certificatesresolvers.letsencryptresolver.acme.storage=/etc/traefik/acme.json"
      - "--providers.docker.defaultRule=Host(`microservices.ddns.net`)"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-certificates:/etc/traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowheaders=Content-Type,Authorization"
      - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors.headers.addvaryheader=true"

  frontend:
    build: ./frontend
    environment:
      - AUTH_API_ADDRESS=http://auth-api:8081
      - TODOS_API_ADDRESS=http://todos-api:8082
    depends_on:
      - auth-api
      - todos-api
      - users-api
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`noxxmicroservice.mooo.com`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencryptresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=8080"

  auth-api:
    build: ./auth-api
    environment:
      - AUTH_API_PORT=8081
      - JWT_SECRET=myfancysecret
      - USERS_API_ADDRESS=http://users-api:8083
    depends_on:
      - users-api
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-api.rule=Host(`noxxmicroservice.mooo.com`) && PathPrefix(`/api/auth`)"
      - "traefik.http.routers.auth-api.entrypoints=websecure"
      - "traefik.http.routers.auth-api.tls.certresolver=letsencryptresolver"
      - "traefik.http.services.auth-api.loadbalancer.server.port=8081"

  todos-api:
    build: ./todos-api
    environment:
      - JWT_SECRET=myfancysecret
      - REDIS_HOST=redis-queue
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    depends_on:
      - redis-queue
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todos-api.rule=Host(`noxxmicroservice.mooo.com`) && PathPrefix(`/api/todos`)"
      - "traefik.http.routers.todos-api.entrypoints=websecure"
      - "traefik.http.routers.todos-api.tls.certresolver=letsencryptresolver"
      - "traefik.http.services.todos-api.loadbalancer.server.port=8082"

  users-api:
    build: ./users-api
    environment:
      - SERVER_PORT=8083
      - JWT_SECRET=myfancysecret
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.users-api.rule=Host(`noxxmicroservice.mooo.com`) && PathPrefix(`/api/users`)"
      - "traefik.http.routers.users-api.entrypoints=websecure"
      - "traefik.http.routers.users-api.tls.certresolver=letsencryptresolver"
      - "traefik.http.services.users-api.loadbalancer.server.port=8083"

  log-processor:
    build: ./log-message-processor
    environment:
      - REDIS_HOST=redis-queue
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    depends_on:
      - redis-queue
    networks:
      - web

  redis-queue:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - web

networks:
  web:
    driver: bridge

volumes:
  traefik-certificates:
  redis-data:
